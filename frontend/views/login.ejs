<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/styles.css">
    <title>Craftista - Login</title>
    <style>
        .auth-container {
            max-width: 400px;
            margin: 50px auto;
            padding: 30px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        
        .auth-form {
            margin-bottom: 20px;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #333;
        }
        
        .form-group input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-sizing: border-box;
        }
        
        .btn {
            background: #007bff;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
            font-size: 16px;
        }
        
        .btn:hover {
            background: #0056b3;
        }
        
        .btn-secondary {
            background: #28a745;
            margin-top: 10px;
        }
        
        .btn-secondary:hover {
            background: #1e7e34;
        }
        
        .toggle-form {
            text-align: center;
            margin-top: 20px;
        }
        
        .toggle-form a {
            color: #007bff;
            text-decoration: none;
        }
        
        .toggle-form a:hover {
            text-decoration: underline;
        }
        
        .error {
            color: #dc3545;
            margin-bottom: 15px;
            padding: 10px;
            background: #f8d7da;
            border: 1px solid #f5c6cb;
            border-radius: 5px;
        }
        
        .success {
            color: #155724;
            margin-bottom: 15px;
            padding: 10px;
            background: #d4edda;
            border: 1px solid #c3e6cb;
            border-radius: 5px;
        }
        
        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <header>
        <img src="/images/logo.png" alt="Craftista Logo" class="logo">
        <h1>Craftista - Authentication</h1>
    </header>

    <main>
        <div class="auth-container">
            <div id="error-message" class="error hidden"></div>
            <div id="success-message" class="success hidden"></div>
            
            <!-- Login Form -->
            <div id="login-form" class="auth-form">
                <h2>Login</h2>
                <form id="loginForm">
                    <div class="form-group">
                        <label for="login-username">Username or Email:</label>
                        <input type="text" id="login-username" name="username" required>
                    </div>
                    <div class="form-group">
                        <label for="login-password">Password:</label>
                        <input type="password" id="login-password" name="password" required>
                    </div>
                    <button type="submit" class="btn">Login</button>
                </form>
                
                <div class="toggle-form">
                    <p>Don't have an account? <a href="#" id="show-register">Register here</a></p>
                </div>
            </div>
            
            <!-- Registration Form -->
            <div id="register-form" class="auth-form hidden">
                <h2>Register</h2>
                <form id="registerForm">
                    <div class="form-group">
                        <label for="register-username">Username:</label>
                        <input type="text" id="register-username" name="username" required>
                    </div>
                    <div class="form-group">
                        <label for="register-email">Email:</label>
                        <input type="email" id="register-email" name="email" required>
                    </div>
                    <div class="form-group">
                        <label for="register-password">Password:</label>
                        <input type="password" id="register-password" name="password" required>
                    </div>
                    <div class="form-group">
                        <label for="register-confirm-password">Confirm Password:</label>
                        <input type="password" id="register-confirm-password" name="confirmPassword" required>
                    </div>
                    <button type="submit" class="btn btn-secondary">Register</button>
                </form>
                
                <div class="toggle-form">
                    <p>Already have an account? <a href="#" id="show-login">Login here</a></p>
                </div>
            </div>
        </div>
    </main>

    <footer>
        <p>Sample App created by School of Devops for DevOps Workshops.</p>
        <p>&copy; <%= new Date().getFullYear() %> Initcron Systems Private Limited</p>
    </footer>

    <script>
        // JWT tokens are now handled via HTTP-only cookies
        // No client-side token management needed
        
        // Form toggling
        document.getElementById('show-register').addEventListener('click', function(e) {
            e.preventDefault();
            document.getElementById('login-form').classList.add('hidden');
            document.getElementById('register-form').classList.remove('hidden');
            clearMessages();
        });

        document.getElementById('show-login').addEventListener('click', function(e) {
            e.preventDefault();
            document.getElementById('register-form').classList.add('hidden');
            document.getElementById('login-form').classList.remove('hidden');
            clearMessages();
        });

        // Login form submission
        document.getElementById('loginForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const data = {
                username: formData.get('username'),
                password: formData.get('password')
            };

            try {
                const response = await fetch('/auth/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (response.ok) {
                    // JWT token is now stored in HTTP-only cookie automatically
                    showSuccess('Login successful! Redirecting...');
                    setTimeout(() => {
                        window.location.href = '/';
                    }, 1500);
                } else {
                    showError(result.error || 'Login failed');
                }
            } catch (error) {
                showError('Network error. Please try again.');
            }
        });

        // Registration form submission
        document.getElementById('registerForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const password = formData.get('password');
            const confirmPassword = formData.get('confirmPassword');
            
            if (password !== confirmPassword) {
                showError('Passwords do not match');
                return;
            }

            const data = {
                username: formData.get('username'),
                email: formData.get('email'),
                password: password
            };

            try {
                const response = await fetch('/auth/register', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (response.ok) {
                    showSuccess('Registration successful! Please log in to continue.');
                    // Clear the registration form
                    document.getElementById('registerForm').reset();
                    // Switch to login form after a short delay
                    setTimeout(() => {
                        document.getElementById('register-form').classList.add('hidden');
                        document.getElementById('login-form').classList.remove('hidden');
                        clearMessages();
                    }, 2000);
                } else {
                    showError(result.error || 'Registration failed');
                }
            } catch (error) {
                showError('Network error. Please try again.');
            }
        });

        function showError(message) {
            const errorDiv = document.getElementById('error-message');
            const successDiv = document.getElementById('success-message');
            
            successDiv.classList.add('hidden');
            errorDiv.textContent = message;
            errorDiv.classList.remove('hidden');
        }

        function showSuccess(message) {
            const errorDiv = document.getElementById('error-message');
            const successDiv = document.getElementById('success-message');
            
            errorDiv.classList.add('hidden');
            successDiv.textContent = message;
            successDiv.classList.remove('hidden');
        }

        function clearMessages() {
            document.getElementById('error-message').classList.add('hidden');
            document.getElementById('success-message').classList.add('hidden');
        }
    </script>
</body>
</html>
